version: '3'

services:
  app:
    container_name: api-messenger
    restart: always
    build: .
    ports:
      - "8080:8080"
    environment:
      SERVER_PORT: 8080
      SPRING_DATA_MONGODB_HOST: mongo
      MONGODB_DB_NAME: messenger
      MONGODB_AUTH_DB: admin
      MINIO_URL: http://minio:9000
      MAX_FILE_SIZE: "1GB"
      MAX_REQUEST_SIZE: "1GB"
      FILE-SIZE-THRESHOLD: "2MB"
      REGISTRATION_LINK: https://messenger/register
    depends_on:
      - mongo
      - minio
    networks:
      - app-network

  mongo:
    container_name: mongo-messenger-db
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: "messenger"
    command: ["--replSet", "rs0"]
    volumes:
      - ./mongoVolume:/data/db
    networks:
      - app-network
#  After mongo start input next commands to terminal
#
#  docker ps
#  docker exec -it id_контейнера_с_mongo bash
#  mongosh --port 27017
#  rs.initiate()
#  rs.status()
#  exit

  minio:
    container_name: messenger-file-storage
    image: bitnami/minio:latest
    restart: always
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: "vQJ1SbOjLtIBSnFyG8yA"
      MINIO_ROOT_PASSWORD: "AZpH9VA22Y38JaNcv0qWNCXenUVU49Im3lYr3zLp"
      MINIO_BUCKET: "file-storage"
      MINIO_REGION: "us-east-1"
    volumes:
      - ./file-storage:/bitnami/minio/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge