openapi: 3.0.3
info:
  title: API Мессенджера
  version: v1.r1
  contact:
    name: Фролов Иван
paths:
  /api/v1/auth/authenticate:
    description: Аутентификация пользователя
    post:
      tags: [ auth ]
      operationId: authenticate
      security:
        - noAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        204:
          description: Успешная аутентификация пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/auth/register:
    description: Регистрация пользователя
    post:
      tags: [ auth ]
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        204:
          description: Успешная регистрация пользователя
        409:
          $ref: '#/components/responses/Conflict'
  /api/v1/messenger/getAllChats/{id}:
    description: Получить все чаты пользователя по его id
    get:
      tags: [ chat ]
      operationId: getAllChats
      responses:
        200:
          $ref: '#/components/schemas/ChatDto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createFavoritesChat/{id}:
    description: Создать чат "Избранное" для пользователя с определённым id
    post:
      tags: [ chat ]
      operationId: createFavoritesChat
      responses:
        201:
          $ref: '#/components/schemas/ChatCreationResponse'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createP2PChat:
    description: Создать приватный чат
    post:
      tags: [ chat ]
      operationId: createP2PChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateP2PChatRequest'
      responses:
        201:
          $ref: '#/components/schemas/ChatCreationResponse'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createGroupChat:
    description: Создать групповой чат
    post:
      tags: [ chat ]
      operationId: createGroupChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupChatRequest'
      responses:
        201:
          $ref: '#/components/schemas/ChatCreationResponse'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateGroupChat:
    description: Обновить параметры группового чата
    put:
      tags: [ chat ]
      operationId: updateGroupChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupChatRequest'
      responses:
        204:
          description: Групповой чат успешно обновлён
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateChatMutedStatus:
    description: Замутить или размутить чат
    put:
      tags: [ chat ]
      operationId: updateChatMutedStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatMutedStatusRequest'
      responses:
        204:
          description: Чат успешно замучен/размучен
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/deleteChat/{id}:
    description: Удалить чат
    delete:
      tags: [ chat ]
      operationId: deleteChat
      responses:
        204:
          description: Чат успешно удалён
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/getPageOfMessages:
    description: Получить страницу с последними сообщениями чата
    get:
      tags: [ message ]
      operationId: getPageOfMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPageOfMessagesRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/sendMessage:
    description: Отправить сообщение
    post:
      tags: [ message ]
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        201:
          $ref: '#/components/schemas/MessageSendingResponse'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateMessageList:
    description: Обновить список сообщений чата
    get:
      tags: [ message ]
      operationId: updateMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageListRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/setMessageChecked:
    description: Пометить сообщение прочитанным
    put:
      tags: [ message ]
      operationId: readMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMessageCheckedRequest'
      responses:
        204:
          description: Сообщение помечено, как "Прочитано"
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/findMessageByValue:
    description: Найти сообщение по его содержимому
    get:
      tags: [ message ]
      operationId: findMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindMessageByValueRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/replyToMessage:
    description: Ответить на сообщение
    post:
      tags: [ message ]
      operationId: replyToMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyToMessageRequest'
      responses:
        201:
          $ref: '#/components/schemas/MessageSendingResponse'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/editMessage:
    description: Изменить сообщение
    put:
      tags: [ message ]
      operationId: editMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMessageRequest'
      responses:
        204:
          description: Сообщение успешно изменено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/deleteMessage:
    description: Удалить сообщение
    delete:
      tags: [ message ]
      operationId: deleteMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMessageRequest'
      responses:
        204:
          description: Сообщение успешно удалено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/getUserById/{id}:
    description: Найти пользователя по его идентификационному номеру
    get:
      tags: [ user ]
      operationId: getUserById
      responses:
        200:
          $ref: '#/components/schemas/UserDto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/getUserByUsername/{username}:
    description: Найти пользователя по его никнейму
    get:
      tags: [ user ]
      operationId: getUserByUsername
      responses:
        200:
          $ref: '#/components/schemas/UserDto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateUserIcon:
    description: Установить другую аватарку для пользователя
    put:
      tags: [ user ]
      operationId: updateUserIcon
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUerIconRequest'
      responses:
        204:
          description: Аватарка пользователя успешно изменена
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/file/upload/{folder}:
    description: Загрузить файл на файловый сервер, указав в строке запроса папку дислоцирования
    post:
      tags: [ file ]
      operationId: uploadFile
      parameters:
        - in: path
          name: folder
          required: true
          description: Папка, в которую будет загружен файл
          schema:
            type: string
        - in: query
          name: file
          required: true
          description: Загружаемый файл
          schema:
            type: string
            format: binary
      responses:
        201:
          $ref: '#/components/schemas/UploadingFileResponse'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/file/download:
    description: Загрузить файл с файлового сервера
    get:
      tags: [ file ]
      operationId: downloadFile
      parameters:
        - in: query
          name: objectKey
          required: true
          description: Путь к файлу на файловом сервере
          schema:
            type: string
      responses:
        200:
          description: Возвращается массив байтов
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/file/delete:
    description: Удалить файл на файловом сервере
    delete:
      tags: [ file ]
      operationId: deleteFile
      parameters:
        - in: query
          name: objectKey
          required: true
          description: Путь к файлу на файловом сервере
          schema:
            type: string
      responses:
        204:
          description: Файл успешно удалён
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT-токен, содержащийся во всех запросах, кроме запроса аутентификации
        обновляется при каждом запросе, присылая новое значанеие в заголовке ответа сервера
      name: Authorization
      in: header
  schemas:
    ChatDto:
      description: Информация по чату
      required:
        - chatType
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        chatType:
          $ref: "#/components/schemas/ChatType"
        title:
          description: |
            Название чата
          type: string
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        usersWithRole:
          description: |
            Список пользователей с их ролями
          type: array
          items:
            $ref: '#/components/schemas/UserWithRoleDto'
        message:
          description: |
            Последнее сообщение для отображения
          $ref: '#/components/schemas/MessageDto'
        unreadMessagesCount:
          description: |
            Количество непрочитанных сообщений
          type: integer
        muted:
          description: |
            В муте ли чат
          type: boolean
    ChatType:
      description: |
        Информация по типу чата

        * *FAVORITES*    - Избранное

        * *P2P*   - Личный чат

        * *GROUP*   - Групповой чат

      type: string
      enum:
        - "FAVORITES"
        - "P2P"
        - "GROUP"
      example: "FAVORITES"
    MessageDto:
      description: Информация по сообщению
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        publisher:
          description: |
            Идентификационный номер пользователя, что послал сообщение
          type: string
        datas:
          description: |
            Список данных из сообщений
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
        relatesTo:
          description: |
            Другое сообщение, на которое представленное ссылается
            (необязательно)
          $ref: '#/components/schemas/MessageDto'
        dateTime:
          description: |
            Время отправки сообщения
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000"
        checked:
          description: |
            Прочитано ли сообщение
          type: boolean
    MessageData:
      description: Информация по типу и содержимому сообщения
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        messageType:
          $ref: '#/components/schemas/MessageType'
        value:
          description: |
            Содержимое сообщения
          type: string
    MessageType:
      description: |
        Информация по типу сообщения

        * *TEXT*    - Текст

        * *LINK*   - Ссылка

        * *FILE*   - Файл

      type: string
      enum:
        - "TEXT"
        - "LINK"
        - "FILE"
      example: "TEXT"
    UserDto:
      description: Информация о пользователе
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    UserWithRoleDto:
      description: Информация о пользователе и его роли в чате
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        role:
          description: |
            Роль пользователя в чате
          $ref: "#/components/schemas/Role"
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    Role:
      description: |
        Информация по роли пользователя

        * *ADMIN*    - Администратор

        * *USER*   - Пользователь

      type: string
      enum:
        - "ADMIN"
        - "USER"
      example: "USER"

    #    requests
    AuthenticateRequest:
      description: Запрос на аутентификацию
      required:
        - username
        - password
      properties:
        username:
          description: |
            Никнейм пользователя
          type: string
          format: username
          pattern: "^\\w{4,32}$"
          example: "DostoevskyFM"
        password:
          description: |
            Пароль пользователя
          type: string
          format: password
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{12,50}$"
          example: "Let'sL0veEach0ver4ever!"
    RegisterRequest:
      description: Запрос на регистрацию
      required:
        - username
        - password
        - fio
        - phoneNumber
        - email
        - department
        - position
      properties:
        username:
          description: |
            Никнейм пользователя
          type: string
          format: username
          pattern: "^\\w{4,32}$"
          example: "DostoevskyFM"
        password:
          description: |
            Пароль пользователя
          type: string
          format: password
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{12,50}$"
          example: "Let'sFuck4ever!"
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
          format: fio
          example: "Dostoevsky Fyodor Mikhailovich"
        phoneNumber:
          description: |
            Номер телефона
          type: string
          format: phoneNumber
          pattern: "^(\\+7|8)[(]?\\d{3}[)]?[-\\s\\.]?\\d{3}[-\\s.]?\\d{4}$"
          example: "88005553535"
        email:
          description: |
            Электронная почта
          type: string
          format: email
          pattern: "^[\\w.%+-]+@[a-z\\d.-]+\\.[a-z]{2,6}$"
          example: "dostoevsky.fm@gmail.com"
        department:
          description: |
            Отдел работника
          type: string
          pattern: "^\\w{4,32}$"
          example: "seo"
        position:
          description: |
            Позиция работника
          type: string
          pattern: "^\\w{4,32}$"
          example: "copywriter"
    CreateP2PChatRequest:
      description: Запрос на создание приватного чата
      properties:
        users:
          description: |
            2 идентификационных номера пользователей
          type: array
          items:
            type: string
            format: id
        messageDto:
          $ref: "#/components/schemas/CreateP2PChatMessageDto"
    CreateP2PChatMessageDto:
      description: Сообщение для создания приватного чата
      properties:
        publisher:
          description: |
            Идентификационный номер пользователя, что послал сообщение
          type: string
        dataDtos:
          description: |
            Список данных из первого сообщения для приватного чата
          type: array
          items:
            $ref: '#/components/schemas/MessageDataDto'
        dateTime:
          description: |
            Время отправки сообщения
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000"
    MessageDataDto:
      description: Данные из первого сообщения для создания приватного чата
      properties:
        messageType:
          $ref: '#/components/schemas/MessageType'
        value:
          description: |
            Содержимое сообщения
          type: string
    CreateGroupChatRequest:
      description: Запрос на создание группового чата
      properties:
        title:
          description: |
            Название чата
          type: string
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        users:
          description: |
            Список записей, состоящих из идентификационного номера пользователя и его роли
          type: array
          items:
            type: string
            format: id,
            $ref: '#/components/schemas/Role'
    UpdateGroupChatRequest:
      description: Запрос на обновление данных группового чата
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        title:
          description: |
            Название чата
          type: string
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        users:
          description: |
            Список записей, состоящих из идентификационного номера пользователя и его роли
          type: array
          items:
            type: string
            format: id,
            $ref: '#/components/schemas/Role'
    UpdateChatMutedStatusRequest:
      description: Запрос на обновление данных группового чата
      properties:
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        muted:
          description: |
            Мут/размут (true/false)
          type: boolean
    GetPageOfMessagesRequest:
      description: Запрос на получение страницы сообщений
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
    SendMessageRequest:
      description: Запрос на отправку сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        dataDtos:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageDataDto'
        dateTime:
          description: |
            Время отправки сообщения
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000-05:00"
    UpdateMessageListRequest:
      description: Запрос на обновление списка сообщений
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
        dateTime:
          description: |
            Время отправки последнего прочитанного сообщения (любым пользователем)
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000-05:00"
    SetMessageCheckedRequest:
      description: Запрос на прочтение сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        publisherId:
          description: |
            Идентификационный номер отправителя сообщения
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
    FindMessageByValueRequest:
      description: Запрос на поиск сообщения по содержимому
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя, пославшего запрос
          type: string
        value:
          description: |
            Содержимое сообщения
          type: string
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
    ReplyToMessageRequest:
      description: Запрос на отправку ответа на сообщение
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        messageToReplyId:
          description: |
            Идентификационный номер сообщения, на которое послан ответ
          type: string
        dataDtos:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageDataDto'
        dateTime:
          description: |
            Время отправки последнего прочитанного сообщения (любым пользователем)
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000-05:00"
    EditMessageRequest:
      description: Запрос на изменение содержимого сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
        datas:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
    DeleteMessageRequest:
      description: Запрос на удаление сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
    UpdateUerIconRequest:
      description: Запрос на изменение аватарки пользователя
      properties:
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        icon:
          description: |
            Ссылка на иконку на файловом сервере
          type: string

    #   responses dto
    AuthenticationResponse:
      description: Возврат токена для входа и параметров пользователя
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        icon:
          description: |
            Ссылка на иконку на FTP-сервере
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    ChatCreationResponse:
      description: Возврат id созданного чата
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
          pattern: id
    PageOfMessages:
      description: Возврат страницы сообщений
      properties:
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
        content:
          description: |
            Список сообщений
          type: array
          items:
            $ref: '#/components/schemas/MessageDto'
    MessageSendingResponse:
      description: Возврат id созданного сообщения и его содержимого
      properties:
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
          pattern: id
        datas:
          description: |
            Массив содержимого сообщений разных типов
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
    UploadingFileResponse:
      description: Возврат ссылки на скачивание файла для дальнейшей обрезки и отправки в бд
      properties:
        fileUrl:
          description: |
            Ссылка на скачивание файла с файлового сервера
          type: string

  headers: { }
  responses:
    #    Присылаем на фронтенд код ошибки и строку, которую надо вывести
    NotFound:
      description: Искомое не найдено
      content:
        application/problem+json:
          example: "Неверный логин или пароль"
    Conflict:
      description: Данные пользователя уже используются
      content:
        application/problem+json:
          example: "Это имя пользователя уже используется"
    BadRequest:
      description: Ошибка в параметрах запроса. Запрос не следует повторять
      content:
        application/problem+json:
          example: "Ошибка в параметрах запроса"
    InternalServerError:
      description: Ошибка сервера при выполнении запроса. Запрос следует повторить позднее
      content:
        application/problem+json:
          example: "Сервер лёг, поздравляю, можно выйти на улицу и потрогать траву"
  parameters: { }
tags:
  - name: auth
    description: Операции со входом пользователя в систему
  - name: chat
    description: Операции взаимодействия с чатами
  - name: message
    description: Операции взаимодействия с сообщениями
  - name: user
    description: Операции взаимодействия с пользователями
  - name: file
    description: Операции взаимодействия с файловым сервером

servers:
  - url: http://localhost
    description: ''
security:
  - BearerAuth: [ ]
