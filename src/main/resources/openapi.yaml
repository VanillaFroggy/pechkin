openapi: 3.0.3
info:
  title: API Мессенджера
  version: v1.r1
  contact:
    name: Фролов Иван
paths:
  /api/v1/auth/authenticate:
    description: Аутентификация пользователя
    post:
      tags: [ auth ]
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        200:
          description: Успешная аутентификация пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        404:
          $ref: '#/components/responses/NotFound'
  /api/v1/auth/register:
    description: Регистрация пользователя
    post:
      tags: [ auth ]
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        200:
          description: Успешная регистрация пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        409:
          $ref: '#/components/responses/Conflict'
  /api/v1/messenger/getAllChats/{id}:
    description: Получить все чаты пользователя по его id
    get:
      tags: [ chat ]
      operationId: getAllChats
      responses:
        200:
          $ref: '#/components/schemas/ChatDto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createFavoritesChat/{id}:
    description: Создать чат "Избранное" для пользователя с определённым id
    post:
      tags: [ chat ]
      operationId: createFavoritesChat
      responses:
        204:
          description: Успешное создание чата "Избранное"
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createP2PChat:
    description: Создать приватный чат
    post:
      tags: [ chat ]
      operationId: createP2PChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateP2PChatRequest'
      responses:
        204:
          description: Успешное создание приватного чата
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/createGroupChat:
    description: Создать групповой чат
    post:
      tags: [ chat ]
      operationId: createGroupChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupChatRequest'
      responses:
        204:
          description: Успешное создание группового чата
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateGroupChat:
    description: Обновить параметры группового чата
    put:
      tags: [ chat ]
      operationId: updateChat
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupChatRequest'
      responses:
        204:
          description: Групповой чат успешно обновлён
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/deleteChat/{id}:
    description: Удалить чат
    delete:
      tags: [ chat ]
      operationId: deleteChat
      responses:
        204:
          description: Чат успешно удалён
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/getAllMessages:
    description: Получить все сообщения чата по его id
    get:
      tags: [ message ]
      operationId: getAllMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageOfMessagesRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/sendMessage:
    description: Отправить сообщение
    post:
      tags: [ message ]
      operationId: sendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        204:
          description: Сообщение успешно отправлено
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/updateMessages/{id}:
    description: Обновить список сообщений
    get:
      tags: [ message ]
      operationId: updateMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessagesRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/setMessageChecked:
    description: Пометить сообщение прочитанным
    put:
      tags: [ message ]
      operationId: readMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetMessageCheckedRequest'
      responses:
        204:
          description: Сообщение помечено, как "Прочитано"
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/findMessageByValue:
    description: Найти сообщение по его содержимому
    get:
      tags: [ message ]
      operationId: findMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindMessageByValueRequest'
      responses:
        200:
          $ref: '#/components/schemas/PageOfMessages'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/replyToMessage:
    description: Ответить на сообщение
    post:
      tags: [ message ]
      operationId: replyToMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyToMessageRequest'
      responses:
        204:
          description: Сообщение успешно отправлено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/editMessage:
    description: Изменить сообщение
    put:
      tags: [ message ]
      operationId: editMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMessageRequest'
      responses:
        204:
          description: Сообщение успешно изменено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/deleteMessage:
    description: Удалить сообщение
    delete:
      tags: [ message ]
      operationId: deleteMessage
      requestBody:
        content:
          application/json:
            schema:
                    $ref: '#/components/schemas/DeleteMessageRequest'
      responses:
        204:
          description: Сообщение успешно удалено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /api/v1/messenger/getUserById/{id}:
    description: Найти пользователя по его идентификационному номеру
    get:
      tags: [ user ]
      operationId: getUserById
      responses:
        200:
          $ref: '#/components/schemas/UserDto'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes: {}
  schemas:
    ChatDto:
      description: Информация по чату
      required:
        - chatType
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        chatType:
          $ref: "#/components/schemas/ChatType"
        title:
          description: |
            Название чата
          type: string
        usersWithRole:
          description: |
            Список пользователей с их ролями
          type: array
          items:
            $ref: '#/components/schemas/UserWithRoleDto'
        message:
          description: |
            Последнее сообщение для отображения
          $ref: '#/components/schemas/Message'
    ChatType:
      description: |
        Информация по типу чата

        * *FAVORITES*    - Избранное

        * *P2P*   - Личный чат

        * *GROUP*   - Групповой чат

      type: string
      enum:
        - "FAVORITES"
        - "P2P"
        - "GROUP"
      example: "FAVORITES"
    Message:
      description: Информация по сообщению
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        publisher:
          description: |
            Идентификационный номер пользователя, что послал сообщение
          type: string
        datas:
          description: |
            Список данных из сообщений
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
        relatesTo:
          description: |
            Другое сообщение, на которое представленное ссылается
            (необязательно)
          $ref: '#/components/schemas/Message'
        dateTime:
          description: |
            Время отправки сообщения
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000-05:00"
        checked:
          description: |
            Прочитано ли сообщение
          type: boolean
    MessageData:
      description: Информация по типу и содержимому сообщения
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        messageType:
          $ref: '#/components/schemas/MessageType'
        value:
          description: |
            Содержимое сообщения
          type: string
    MessageType:
      description: |
        Информация по типу сообщения

        * *TEXT*    - Текст

        * *LINK*   - Ссылка

        * *FILE*   - Файл

      type: string
      enum:
        - "TEXT"
        - "LINK"
        - "FILE"
      example: "TEXT"
    UserDto:
      description: Информация о пользователе
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    UserWithRoleDto:
      description: Информация о пользователе и его роли в чате
      properties:
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        role:
          description: |
            Роль пользователя в чате
          $ref: "#/components/schemas/Role"
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    Role:
      description: |
        Информация по роли пользователя

        * *ADMIN*    - Администратор

        * *USER*   - Пользователь

      type: string
      enum:
        - "ADMIN"
        - "USER"
      example: "USER"

#    requests
    AuthenticateRequest:
      description: Запрос на аутентификацию
      required:
        - username
        - password
      properties:
        username:
          description: |
            Никнейм пользователя
          type: string
          format: username
          pattern: "^\\w{4,32}$"
          example: "DostoevskyFM"
        password:
          description: |
            Пароль пользователя
          type: string
          format: password
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{12,50}$"
          example: "Let'sL0veEach0ver4ever!"
    RegisterRequest:
      description: Запрос на регистрацию
      required:
        - username
        - password
        - fio
        - phoneNumber
        - email
        - department
        - position
      properties:
        username:
          description: |
            Никнейм пользователя
          type: string
          format: username
          pattern: "^\\w{4,32}$"
          example: "DostoevskyFM"
        password:
          description: |
            Пароль пользователя
          type: string
          format: password
          pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\w\\s]).{12,50}$"
          example: "Let'sFuck4ever!"
        fio:
          description: |
            ФИО пользователя
          type: string
          format: fio
          pattern: "^[\\w\\s]{4,32}$"
          example: "Dostoevsky Fyodor Mikhailovich"
        phoneNumber:
          description: |
            Номер телефона
          type: string
          format: phoneNumber
          pattern: "^(\\+7|8)[(]?\\d{3}[)]?[-\\s\\.]?\\d{3}[-\\s.]?\\d{4}$"
          example: "88005553535"
        email:
          description: |
            Электронная почта
          type: string
          format: email
          pattern: "^[\\w.%+-]+@[a-z\\d.-]+\\.[a-z]{2,6}$"
          example: "dostoevsky.fm@gmail.com"
        department:
          description: |
            Отдел работника
          type: string
          pattern: "^\\w{4,32}$"
          example: "seo"
        position:
          description: |
            Позиция работника
          type: string
          pattern: "^\\w{4,32}$"
          example: "copywriter"
    CreateP2PChatRequest:
      description: Запрос на создание приватного чата
      properties:
        users:
          description: |
            2 идентификационных номера пользователей
          type: array
          items:
            type: string
            format: id
    CreateGroupChatRequest:
      description: Запрос на создание группового чата
      properties:
        title:
          description: |
            Название чата
          type: string
        users:
          description: |
            Список записей, состоящих из идентификационного номера пользователя и его роли
          type: array
          items:
            type: string
            format: id,
            $ref: '#/components/schemas/Role'
    UpdateGroupChatRequest:
      description: Запрос на обновление данных группового чата
      properties:
        id:
          description: |
            Идентификационный номер чата
          type: string
        title:
          description: |
            Название чата
          type: string
        users:
          description: |
            Список записей, состоящих из идентификационного номера пользователя и его роли
          type: array
          items:
            type: string
            format: id,
            $ref: '#/components/schemas/Role'
    PageOfMessagesRequest:
      description: Запрос на получение страницы сообщений
      properties:
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
        chatId:
          description: |
            Идентификационный номер чата
          type: string
    SendMessageRequest:
      description: Запрос на отправку сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        datas:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
    UpdateMessagesRequest:
      description: Запрос на обновление списка сообщений
      properties:
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        datetime:
          description: |
            Время отправки последнего прочитанного сообщения (любым пользователем)
          type: string
          format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"
          example: "2000-10-31T01:30:00.000-05:00"
    SetMessageCheckedRequest:
      description: Запрос на прочтение сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
    FindMessageByValueRequest:
      description: Запрос на поиск сообщения по содержимому
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        value:
          description: |
            Содержимое сообщения
          type: string
    ReplyToMessageRequest:
      description: Запрос на отправку ответа на сообщение
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        userId:
          description: |
            Идентификационный номер пользователя
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
        datas:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
    EditMessageRequest:
      description: Запрос на изменение содержимого сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string
        datas:
          description: |
            Массив содержимого сообщений разных типов
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/MessageData'
    DeleteMessageRequest:
      description: Запрос на удаление сообщения
      properties:
        chatId:
          description: |
            Идентификационный номер чата
          type: string
        messageId:
          description: |
            Идентификационный номер сообщения
          type: string

#   responses dto
    AuthenticationResponse:
      description: Возврат токена для входа и параметров пользователя
      properties:
        token:
          description: |
            Токен для входа
          type: string
        id:
          description: |
            Идентификационный номер
          type: string
        username:
          description: |
            Никнейм пользователя
          type: string
        fio:
          description: |
            ФИО пользователя
          type: string
        phoneNumber:
          description: |
            Номер телефона
          type: string
        email:
          description: |
            Электронная почта
          type: string
          format: email
        department:
          description: |
            Отдел работника
          type: string
        position:
          description: |
            Позиция работника
          type: string
    PageOfMessages:
      description: Возврат страницы сообщений
      properties:
        pageNumber:
          description: |
            Номер страницы
          minimum: 0
          type: integer
        pageSize:
          description: |
            Количество элементов на странице
          minimum: 1
          maximum: 50
          type: integer
        content:
          description: |
            Список сообщений
          type: array
          items:
            $ref: '#/components/schemas/Message'

  headers: {}
  responses:
    #    Присылаем на фронтенд код ошибки и строку, которую надо вывести
    NotFound:
      description: Искомое не найдено
      content:
        application/problem+json:
          example: "Неверный логин или пароль"
    Conflict:
      description: Данные пользователя уже используются
      content:
        application/problem+json:
          example: "Это имя пользователя уже используется"
    BadRequest:
      description: Ошибка в параметрах запроса. Запрос не следует повторять
      content:
        application/problem+json:
          example: "Неверный логин или пароль"
    InternalServerError:
      description: Ошибка сервера при выполнении запроса. Запрос следует повторить позднее
      content:
        application/problem+json:
          example: "Неверный логин или пароль"
  parameters: {}
tags:
  - name: auth
    description: Операции со входом пользователя в систему
  - name: chat
    description: Операции взаимодействия с чатами
  - name: message
    description: Операции взаимодействия с сообщениями
  - name: user
    description: Операции взаимодействия с пользователями

servers:
  - url: http://localhost
    description: ''
security: []
